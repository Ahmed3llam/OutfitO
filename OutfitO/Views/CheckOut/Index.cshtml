@model OutfitO.ViewModels.PaymentViewModel
@{
    ViewData["Title"] = "Index";
}

<style>
    body, html {
        height: 10hv;
        margin: 0;
        font-family: Arial, sans-serif;
        overflow-x: hidden; /* Disable horizontal scroll */
        overflow-y: auto; /* Enable vertical scroll if needed */
    }

    .container {
        display: flex;
        justify-content: flex-end; /* Align content to the right */
        align-items: center;
        height: 100%;
        padding-right: 20px; /* Add right padding to create space from the right edge */
    }

    .payment-form {
        width: 400px;
        padding: 30px;
        border: 1px solid #ccc;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        background-color: #f9f9f9; /* Light background color */
        margin-right: auto; /* Align form to the right */
    }

        .payment-form h2 {
            text-align: center;
            margin-bottom: 20px;
        }

    .form-group {
        margin-bottom: 20px; /* Space between form groups */
    }

        .form-group label {
            font-weight: bold;
        }

        .form-group input {
            width: 100%;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

    .form-row {
        display: flex;
        justify-content: space-between;
    }

        .form-row .form-group {
            width: calc(33% - 10px); /* Adjust width of inputs in the form row */
        }

    .form-group button {
        width: 200px; /* Fixed width to center the button */
        margin: 0 auto; /* Center the button horizontally */
        display: block; /* Ensure the button takes full width */
        padding: 10px;
        border: none;
        border-radius: 5px;
        background-color: #007bff;
        color: #fff;
        cursor: pointer;
    }

        .form-group button:hover {
            background-color: #0056b3;
        }

    #card-errors {
        color: red;
        margin-top: 10px;
    }
</style>


<div class="container">
    <div class="payment-form">
        <h2>Checkout</h2>

        <form id="payment-form" action="/CheckOut/ProcessPayment" method="post">
            <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" id="name" name="Name" class="form-control" required />
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="Email" class="form-control" required />
            </div>
            <div class="form-group">
                <label for="amount">Amount:</label>
                <input type="number" id="amount" name="Amount" step="1" min="1" class="form-control" required />
            </div>
            <div class="form-group">
                <label for="address">Address:</label>
                <input type="text" id="address" name="Address" class="form-control" />
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label for="city">City:</label>
                    <input type="text" id="city" name="City" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="state">State:</label>
                    <input type="text" id="state" name="State" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="zip">Zip:</label>
                    <input type="text" id="zip" name="Zip" class="form-control" />
                </div>
            </div>
            <div class="form-group">
                <label for="country">Country:</label>
                <input type="text" id="country" name="Country" class="form-control" />
            </div>
            <div class="form-group">
                <label for="phone">Phone:</label>
                <input type="tel" id="phone" name="Phone" class="form-control" />
            </div>
            <div class="form-group">
                <label for="card-element">
                    Credit or debit card
                </label>
                <div id="card-element" class="form-control">
                    <!-- A Stripe Element will be inserted here. -->
                </div>

                <!-- Used to display form errors. -->
                <div id="card-errors" role="alert"></div>
            </div>

            <button id="submit-button" class="btn btn-primary">Submit Payment</button>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        // JavaScript code for Stripe integration
        // Create a Stripe client.
        var stripe = Stripe('pk_test_51Oxs1dA5xWK61WYUCohvbYnbaVDx7TzCc55SzJkDzf3NNioKQJfaPx2urIS45ofUYwGY7HtqyFik68Z4tIQk8nUp00mFuErfZh');

        // Create an instance of Elements.
        var elements = stripe.elements();

        // Create an instance of the card Element.
        var card = elements.create('card');

        // Add an instance of the card Element into the `card-element` div.
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        card.addEventListener('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        // Handle form submission.
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            // Disable the submit button to prevent multiple submissions.
            document.getElementById('submit-button').disabled = true;

            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    // Inform the user if there was an error.
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;

                    // Enable the submit button.
                    document.getElementById('submit-button').disabled = false;
                } else {
                    // Insert the token ID into the form so it gets submitted to the server.
                    var tokenInput = document.createElement('input');
                    tokenInput.setAttribute('type', 'hidden');
                    tokenInput.setAttribute('name', 'stripeToken');
                    tokenInput.setAttribute('value', result.token.id);
                    form.appendChild(tokenInput);

                    // Submit the form.
                    form.submit();
                }
            });
        });
    </script>
}
